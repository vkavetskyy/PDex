// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PDex.Infrastructure.Persistence;

#nullable disable

namespace PDex.Infrastructure.Migrations
{
    [DbContext(typeof(PokemonDbContext))]
    partial class PokemonDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PDex.Domain.Entities.Pokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EncodedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pokemons");
                });

            modelBuilder.Entity("PDex.Domain.Entities.Pokemon", b =>
                {
                    b.OwnsOne("PDex.Domain.Entities.PokemonName", "Name", b1 =>
                        {
                            b1.Property<int>("PokemonId")
                                .HasColumnType("int");

                            b1.Property<string>("Chinese")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("English")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("French")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Japanese")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("PokemonId");

                            b1.ToTable("Pokemons");

                            b1.WithOwner()
                                .HasForeignKey("PokemonId");
                        });

                    b.OwnsOne("PDex.Domain.Entities.PokemonStats", "Stats", b1 =>
                        {
                            b1.Property<int>("PokemonId")
                                .HasColumnType("int");

                            b1.Property<int>("Attack")
                                .HasColumnType("int");

                            b1.Property<int>("Defense")
                                .HasColumnType("int");

                            b1.Property<int>("HP")
                                .HasColumnType("int");

                            b1.Property<int>("SpAttack")
                                .HasColumnType("int");

                            b1.Property<int>("SpDefense")
                                .HasColumnType("int");

                            b1.Property<int>("Speed")
                                .HasColumnType("int");

                            b1.HasKey("PokemonId");

                            b1.ToTable("Pokemons");

                            b1.WithOwner()
                                .HasForeignKey("PokemonId");
                        });

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("Stats")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
